// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS.Data;


#nullable disable

namespace TMS.Migrations
{
    [DbContext(typeof(TourismContext))]
    [Migration("20250910104757_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourPackageId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountPaid = 10000m,
                            BookingDate = new DateTime(2025, 9, 20, 16, 17, 57, 159, DateTimeKind.Local).AddTicks(3979),
                            ConfirmedOn = new DateTime(2025, 9, 10, 16, 17, 57, 159, DateTimeKind.Local).AddTicks(4019),
                            Seats = 2,
                            TourPackageId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            AmountPaid = 8000m,
                            BookingDate = new DateTime(2025, 9, 15, 16, 17, 57, 159, DateTimeKind.Local).AddTicks(4029),
                            ConfirmedOn = new DateTime(2025, 9, 10, 16, 17, 57, 159, DateTimeKind.Local).AddTicks(4030),
                            Seats = 1,
                            TourPackageId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("TourPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TourPackages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "3 Days/2 Nights Goa Tour",
                            Price = 5000m,
                            Title = "Goa Beach Trip"
                        },
                        new
                        {
                            Id = 2,
                            Description = "5 Days Trekking in Himalayas",
                            Price = 12000m,
                            Title = "Himalaya Trek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "4 Days Houseboat Tour",
                            Price = 8000m,
                            Title = "Kerala Backwaters"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@test.com",
                            Name = "Admin",
                            Password = "admin123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john@test.com",
                            Name = "John Doe",
                            Password = "john123",
                            Role = "Customer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jane@test.com",
                            Name = "Jane Smith",
                            Password = "jane123",
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("Booking", b =>
                {
                    b.HasOne("TourPackage", "TourPackage")
                        .WithMany()
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "Customer")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("TourPackage");
                });
#pragma warning restore 612, 618
        }
    }
}
